{"remainingRequest":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsun/打咩/Vue/vue-practice/src/views/tableCol/index.vue?vue&type=style&index=0&id=86780522&lang=scss&scoped=true&","dependencies":[{"path":"/Users/kingsun/打咩/Vue/vue-practice/src/views/tableCol/index.vue","mtime":1641979094358},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsun/打咩/Vue/vue-practice/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwcC1jb250YWluZXIge30K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA","file":"index.vue","sourceRoot":"src/views/tableCol","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <vxe-table\n      border\n      resizable\n      height=\"300\"\n      :scroll-y=\"{enabled: false}\"\n      :span-method=\"mergeRowMethod\"\n      :data=\"tableData3\"\n    >\n      <vxe-column type=\"seq\" width=\"60\" />\n      <vxe-column field=\"key\" title=\"Key\" />\n      <vxe-column field=\"content\" title=\"Translate\" />\n      <vxe-column field=\"language\" title=\"Language\" :filters=\"[{label: '中文', value: 'zh_CN' }, {label: 'English', value: 'en_US'}]\" />\n    </vxe-table>\n\n  </div>\n</template>\n<script>\nexport default {\n  components: {},\n  data() {\n    return {\n      tableData3: [\n        { id: 10001, key: 'app.label.name', content: '名称', language: 'zh_CN' },\n        { id: 10002, key: 'app.label.name', content: 'Name', language: 'en_US' },\n        { id: 10003, key: 'app.label.sex', content: '性别', language: 'zh_CN' },\n        { id: 10004, key: 'app.label.sex', content: 'Sex', language: 'en_US' },\n        { id: 10005, key: 'app.label.age', content: '年龄', language: 'zh_CN' },\n        { id: 10006, key: 'app.label.age', content: 'Age', language: 'en_US' },\n        { id: 10007, key: 'app.label.role', content: '角色', language: 'zh_CN' },\n        { id: 10008, key: 'app.label.role', content: 'Role', language: 'en_US' },\n        { id: 10009, key: 'app.label.address', content: '地址', language: 'zh_CN' },\n        { id: 10010, key: 'app.label.address', content: 'Address', language: 'en_US' },\n        { id: 10011, key: 'app.label.nickname', content: '昵称', language: 'zh_CN' },\n        { id: 10012, key: 'app.label.nickname', content: 'Nickname', language: 'en_US' }\n      ]\n    }\n  },\n  created() {},\n  mounted() {},\n  methods: {\n    mergeRowMethod({ row, _rowIndex, _columnIndex, column, visibleData }) {\n      // 不晓得不晓得\n      // console.log(row, _rowIndex, _columnIndex, column, visibleData, 'row, _rowIndex, column, visibleData')\n      // return { rowspan: 1, colspan: 1 }\n\n      for (const k in row) {\n        const fields = k\n        const cellValue = row[column.property]\n        if (cellValue && fields.includes(column.property)) {\n          // 判断行\n          const prevRow = visibleData[_rowIndex - 1]\n          let nextRow = visibleData[_rowIndex + 1]\n          let countRowspan = 1\n          let countColspan = 1\n          if (prevRow && prevRow[column.property] === cellValue) {\n            // return { rowspan: 0, colspan: 0 }\n            // countRowspan = 0\n          } else {\n            while (nextRow && nextRow[column.property] === cellValue) {\n              nextRow = visibleData[++countRowspan + _rowIndex]\n            }\n          }\n\n          // 判断列\n          const prevCol = visibleData[_columnIndex - 1]\n          let nextCol = visibleData[_columnIndex + 1]\n          if (prevCol && prevCol[column.property] === cellValue) {\n            // return { rowspan: 0, colspan: 0 }\n            // countColspan = 0\n          } else {\n            while (nextCol && nextCol[column.property] === cellValue) {\n              nextCol = visibleData[++countColspan + _columnIndex]\n            }\n          }\n\n          if (countRowspan > 1 || countColspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n<style lang='scss' scoped>\n.app-container {}\n</style>\n"]}]}