{"remainingRequest":"/Users/kingsun/打咩/mypages/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsun/打咩/mypages/src/views/formConfig/FormItemDemo/index.vue?vue&type=style&index=0&id=475a5808&lang=scss&scoped=true&","dependencies":[{"path":"/Users/kingsun/打咩/mypages/src/views/formConfig/FormItemDemo/index.vue","mtime":1660393202194},{"path":"/Users/kingsun/打咩/mypages/node_modules/css-loader/dist/cjs.js","mtime":1660393200041},{"path":"/Users/kingsun/打咩/mypages/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660393201871},{"path":"/Users/kingsun/打咩/mypages/node_modules/postcss-loader/src/index.js","mtime":1660393201022},{"path":"/Users/kingsun/打咩/mypages/node_modules/sass-loader/dist/cjs.js","mtime":1660393201631},{"path":"/Users/kingsun/打咩/mypages/node_modules/cache-loader/dist/cjs.js","mtime":1660393199740},{"path":"/Users/kingsun/打咩/mypages/node_modules/vue-loader/lib/index.js","mtime":1660393201871}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHAtY29udGFpbmVyIHt9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA","file":"index.vue","sourceRoot":"src/views/formConfig/FormItemDemo","sourcesContent":["\n<script>\nimport config from '../config'\nexport default {\n  name: 'FormItemDemo',\n  props: {\n    itemConfig: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  computed: {\n    componentShow() {\n      const vIfArr = this.itemConfig?.options.vIf\n      if (!vIfArr) return true\n      const relationArr = config.filter(config => vIfArr.some(vIf => vIf.relationKey === config.formKey))\n      for (const relationItem of relationArr) {\n        const vIfItem = vIfArr.find(_ => _.relationKey === relationItem.formKey)\n        // 这里就是判断 联动的表单值 是否不满足 可以显示 的条件，不满足则不显示\n        if (relationItem.value !== vIfItem.value) return false\n      }\n      return true\n    }\n  },\n  render(createElement) {\n    if (!this.componentShow) return\n    console.log(this.itemConfig)\n    return createElement('el-form-item', {\n      props: {\n        label: this.itemConfig.label // 表单项的label\n      }\n    }, [\n      // 表单组件\n      createElement(this.itemConfig.type, {\n        props: {\n          value: this.itemConfig.value // 这里是自己实现一个 v-model\n        },\n        on: {\n          input: (nVal) => { // 这里是自己实现一个 v-model\n            this.itemConfig.value = nVal\n          }\n        }\n\n      }, this.itemConfig.optionData && this.itemConfig.optionData.map(option => {\n        // 这里只是 本demo 处理 el-select 的 option 数据，实际大家根据具体业务来实现即可\n        return createElement('el-option', { props: { label: option.label, value: option.value }})\n      }))\n    ])\n  }\n}\n</script>\n<style lang='scss' scoped>\n.app-container {}\n</style>\n"]}]}